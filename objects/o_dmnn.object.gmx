<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var fil = file_text_open_read("dmnn.txt");

var chk = file_text_read_string(fil);
chk = string_copy(chk, 1, 6);
file_text_readln(fil);
file_text_readln(fil);
chk += file_text_read_string(fil);

if chk == "DMNN: 6,6"
{
    file_text_readln(fil);
    file_text_readln(fil);
    var data = file_text_read_string(fil);
    file_text_readln(fil);
    file_text_readln(fil);
    var num = file_text_read_string(fil);
    file_text_readln(fil);
    file_text_readln(fil);
    file_text_readln(fil);
    file_text_readln(fil);
    var nH = file_text_read_string(fil);
    file_text_readln(fil);
    file_text_readln(fil);
    var nL = file_text_read_string(fil);
    file_text_readln(fil);
    var N = file_text_read_string(fil);
    normaN = real(string_copy(N, 17, string_length(N)));
    file_text_close(fil);
    
    num += ",0";
    for (var n = 0; n &lt; (2 * 3); n++)
    {
        Km[n] = real(string_copy(num, 1, string_pos(",", num) - 1));
        num = string_copy(num, string_pos(",", num) + 1, string_length(num));
    }
    
    data += ",";
    var vec;
    var v = 0;
    while true
    {
        vec[v] = real(string_copy(data, 1, string_pos(",", data) - 1));
        if string_pos(",", data) == string_length(data)
        {
            break;
        }
        else
        {
            data = string_copy(data, string_pos(",", data) + 1, string_length(data));
            v++;
        }
    }
    
    var n = 0;
    for (var k = 0; k &lt; Km[0] * m_xin * 2; k += 2)
    {
        WH0[n] = vec[k];
        WL0[n] = vec[k + 1];
        n++;
    }
    n = 0;
    for (var k = Km[0] * m_xin * 2; k &lt; (Km[0] + Km[1]) * m_xin * 2; k += 2)
    {
        WH1[n] = vec[k];
        WL1[n] = vec[k + 1];
        n++;
    }
    n = 0;
    for (var k = (Km[0] + Km[1]) * m_xin * 2; k &lt; (Km[0] + Km[1] + Km[2]) * m_xin * 2; k += 2)
    {
        WH2[n] = vec[k];
        WL2[n] = vec[k + 1];
        n++;
    }
    n = 0;
    for (var k = (Km[0] + Km[1] + Km[2]) * m_xin * 2; k &lt; (Km[0] + Km[1] + Km[2] + Km[3]) * m_xin * 2; k += 2)
    {
        WH3[n] = vec[k];
        WL3[n] = vec[k + 1];
        n++;
    }
    n = 0;
    for (var k = (Km[0] + Km[1] + Km[2] + Km[3]) * m_xin * 2; k &lt; (Km[0] + Km[1] + Km[2] + Km[3] + Km[4]) *
        m_xin * 2; k += 2)
    {
        WH4[n] = vec[k];
        WL4[n] = vec[k + 1];
        n++;
    }
    n = 0;
    for (var k = (Km[0] + Km[1] + Km[2] + Km[3] + Km[4]) * m_xin * 2; k &lt; (Km[0] + Km[1] + Km[2] + Km[3] + Km[4] +
         + Km[5]) * m_xin * 2; k += 2)
    {
        WH5[n] = vec[k];
        WL5[n] = vec[k + 1];
        n++;
    }
    
    nH += ",0";
    for (var n = 0; n &lt; m_xin; n++)
    {
        normaH[n] = real(string_copy(nH, 1, string_pos(",", nH) - 1));
        nH = string_copy(nH, string_pos(",", nH) + 1, string_length(nH));
    }
    
    nL += ",0";
    for (var n = 0; n &lt; m_xin; n++)
    {
        normaL[n] = real(string_copy(nL, 1, string_pos(",", nL) - 1));
        nL = string_copy(nL, string_pos(",", nL) + 1, string_length(nL));
    }
}
else
{
    file_text_close(fil);
    room_goto(w_menu);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
