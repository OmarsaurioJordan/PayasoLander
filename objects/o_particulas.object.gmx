<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = 100;
enmira = -1;
entrenando = false;

//dibujado de particulas
wx = irandom(m_ocult - 1);
wy = irandom(m_ocult - 1);
escalax = (room_width * 0.5) / (m_w * 0.75);
escalay = (room_height * 0.5) / (m_w * 0.75);

instance_create(600, 40, o_entrenar);
instance_create(820, 200, o_limite);
instance_create(820, 360, o_partis);

ini_open("patrones.ini");
    
    patrones = ini_read_real("config", "muestras", 1);
    
    px[patrones - 1, m_xin - 1] = 0;
    pd[patrones - 1, 1] = 0;
    for (var p = 0; p &lt; patrones; p++)
    {
        for (var i = 0; i &lt; m_xin; i++)
        {
            px[p, i] = ini_read_real("p" + string(p), "x" + string(i), 0);
        }
        pd[p, 0] = ini_read_real("p" + string(p), "d0", -1);
        pd[p, 1] = ini_read_real("p" + string(p), "d1", 0);
    }
    
ini_close();

error = -1;
contador = 0;
iteraciones = 0;
pg = instance_create(0, 0, o_red);

var aux;
for (var n = 0; n &lt; o_partis.numerico; n++)
{
    pp[n] = instance_create(0, 0, o_red);
    s_escalar_red(pp[n], m_w * m_vini);
    aux = instance_create(0, 0, o_pp);
    aux.moter = pp[n];
    pv[n] = instance_create(0, 0, o_red);
    s_escalar_red(pv[n], o_vf.numerico * m_vini);
    pb[n] = instance_create(0, 0, o_red);
    s_igualar_redes(pb[n], pp[n]);
}
s_abre_red(pg);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///cerrar pagina
if keyboard_check_pressed(vk_escape)
{
    room_goto(w_menu);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///algoritmo
if entrenando
{
    var i, j, k, p, n, s1, s2;
    
    if pg.error == -1
    {
        s_calcula_error(pg, id);
    }
    
    for (n = 0; n &lt; o_partis.numerico; n++)
    {
        s_actuali_velocidad(n);
        s_actuali_posicion(n);
        
        if pb[n].error == -1
        {
            s_calcula_error(pb[n], id);
        }
        s_calcula_error(pp[n], id);
        
        if pp[n].error &lt; pb[n].error
        {
            s_igualar_redes(pb[n], pp[n]);
            if pp[n].error &lt; pg.error
            {
                s_igualar_redes(pg, pp[n]);
            }
        }
    }
    
    error = pg.error;
    
    contador++;
    iteraciones++;
    
    if contador &gt;= o_limite.numerico or error &lt;= o_deseado.numerico
    {
        entrenando = false;
        audio_play_sound(a_finentreno, 5, false);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ini_open("configuracion.ini");
    
    ini_write_real("particulas", "particulas", o_partis.numerico);
    ini_write_real("particulas", "c1", o_c1.numerico);
    ini_write_real("particulas", "c2", o_c2.numerico);
    ini_write_real("particulas", "limite_velocidad", o_vf.numerico);
    ini_write_real("config", "limite", o_limite.numerico);
    ini_write_real("config", "deseado", o_deseado.numerico);
    
ini_close();

s_guarda_red(pg, false, patrones);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(d_sol_luna, 2, room_width - 192, 0);

draw_set_valign(fa_middle);
draw_set_halign(fa_right);

draw_text_colour(796, 280, "N. Ocultas:",
    c_black, c_black, c_black, c_black, 1);

draw_text_colour(796, 320, "Patrones:",
    c_black, c_black, c_black, c_black, 1);

draw_set_halign(fa_left);

draw_text_colour(820, 280, string(m_ocult),
    c_black, c_black, c_black, c_black, 1);

draw_text_colour(820, 320, string(patrones),
    c_black, c_black, c_black, c_black, 1);

draw_set_valign(fa_bottom);
draw_set_halign(fa_right);

draw_text_colour(room_width - 20, room_height - 25,
    string(contador) + " :Contador",
    c_black, c_black, c_black, c_black, 1);

draw_text_colour(room_width - 20, room_height - 65,
    string(iteraciones) + " :Iteraciones",
    c_black, c_black, c_black, c_black, 1);

draw_text_colour(room_width - 20, room_height - 105,
    s_formato_cajones(error) + " :Error",
    c_black, c_black, c_black, c_black, 1);

draw_rectangle_colour(room_width - 516, room_height - 20,
    room_width - 4, room_height - 4,
    c_green, c_green, c_green, c_green, false);

draw_rectangle_colour(room_width - 516 + contador * (512 / o_limite.numerico),
    room_height - 20, room_width - 4, room_height - 4,
    c_lime, c_lime, c_lime, c_lime, false);

draw_rectangle_colour(room_width - 516, room_height - 20,
    room_width - 4, room_height - 4,
    c_black, c_black, c_black, c_black, true);

if entrenando
{
    draw_sprite(d_vapor, 2, room_width * 0.5 +
        pg.w_sa[0, o_particulas.wx] * o_particulas.escalax,
        room_height * 0.5 + pg.w_sa[1, o_particulas.wy] *
        o_particulas.escalay);
}

draw_sprite(d_mouse, 0, mouse_x, mouse_y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
